{"ast":null,"code":"var _jsxFileName = \"/Users/andrewyoung/escortverif/client/src/VerifyEmail.js\";\nimport React, { Component } from \"react\";\nimport * as firebase from \"firebase\";\nimport LoadingPage from \"./LoadingPage\";\nexport default class VerifyEmail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    // Confirm the link is a sign-in with email link.\n    if (firebase.auth().isSignInWithEmailLink(window.location.href)) {\n      // Additional state parameters can also be passed via URL.\n      // This can be used to continue the user's intended action before triggering\n      // the sign-in operation.\n      // Get the email if available. This should be available if the user completes\n      // the flow on the same device where they started it.\n      var email = window.localStorage.getItem(\"email\");\n\n      if (!email) {\n        // User opened the link on a different device. To prevent session fixation\n        // attacks, ask the user to provide the associated email again. For example:\n        email = window.prompt(\"Please provide your email for confirmation\");\n      } // The client SDK will parse the code from the link for you.\n\n\n      firebase.auth().signInWithEmailLink(email, window.location.href).then(function (result) {\n        localStorage.setItem(\"client\", \"false\");\n        localStorage.setItem(\"provider\", \"true\");\n\n        if (result.additionalUserInfo.isNewUser) {\n          firebase.firestore().collection(\"Providers\").doc(result.user.uid).set({\n            client_address: false,\n            client_age: false,\n            client_assult_charges: false,\n            client_background: false,\n            client_company: false,\n            client_escora_ratings: true,\n            client_escora_references: true,\n            client_facebook: false,\n            client_felonies: false,\n            client_income: false,\n            client_job: false,\n            client_linkedin: false,\n            client_name: false,\n            client_phone: true,\n            client_references: false,\n            client_stds: [false, false, false, false],\n            client_twitter: false,\n            escora_id: \"\",\n            first_name: \"\",\n            last_name: \"\",\n            picture: \"\",\n            verify_picture: \"\"\n          }).then(() => {\n            window.location.href = \"/getstarted\";\n          }).catch(e => {\n            alert(e.message);\n            console.log(e.message);\n          });\n        }\n      }).catch(function (error) {\n        alert(error.message);\n        console.log(error.message); // Some error occurred, you can inspect the code: error.code\n        // Common errors could be invalid email and invalid or expired OTPs.\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(LoadingPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 12\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/andrewyoung/escortverif/client/src/VerifyEmail.js"],"names":["React","Component","firebase","LoadingPage","VerifyEmail","constructor","props","state","render","auth","isSignInWithEmailLink","window","location","href","email","localStorage","getItem","prompt","signInWithEmailLink","then","result","setItem","additionalUserInfo","isNewUser","firestore","collection","doc","user","uid","set","client_address","client_age","client_assult_charges","client_background","client_company","client_escora_ratings","client_escora_references","client_facebook","client_felonies","client_income","client_job","client_linkedin","client_name","client_phone","client_references","client_stds","client_twitter","escora_id","first_name","last_name","picture","verify_picture","catch","e","alert","message","console","log","error"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport * as firebase from \"firebase\";\nimport LoadingPage from \"./LoadingPage\";\n\nexport default class VerifyEmail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    // Confirm the link is a sign-in with email link.\n    if (firebase.auth().isSignInWithEmailLink(window.location.href)) {\n      // Additional state parameters can also be passed via URL.\n      // This can be used to continue the user's intended action before triggering\n      // the sign-in operation.\n      // Get the email if available. This should be available if the user completes\n      // the flow on the same device where they started it.\n      var email = window.localStorage.getItem(\"email\");\n      if (!email) {\n        // User opened the link on a different device. To prevent session fixation\n        // attacks, ask the user to provide the associated email again. For example:\n        email = window.prompt(\"Please provide your email for confirmation\");\n      }\n      // The client SDK will parse the code from the link for you.\n      firebase\n        .auth()\n        .signInWithEmailLink(email, window.location.href)\n        .then(function (result) {\n          localStorage.setItem(\"client\", \"false\");\n          localStorage.setItem(\"provider\", \"true\");\n          if (result.additionalUserInfo.isNewUser) {\n            firebase\n              .firestore()\n              .collection(\"Providers\")\n              .doc(result.user.uid)\n              .set({\n                client_address: false,\n                client_age: false,\n                client_assult_charges: false,\n                client_background: false,\n                client_company: false,\n                client_escora_ratings: true,\n                client_escora_references: true,\n                client_facebook: false,\n                client_felonies: false,\n                client_income: false,\n                client_job: false,\n                client_linkedin: false,\n                client_name: false,\n                client_phone: true,\n                client_references: false,\n                client_stds: [false, false, false, false],\n                client_twitter: false,\n                escora_id: \"\",\n                first_name: \"\",\n                last_name: \"\",\n                picture: \"\",\n                verify_picture: \"\",\n              })\n              .then(() => {\n                window.location.href = \"/getstarted\";\n              })\n              .catch((e) => {\n                alert(e.message);\n                console.log(e.message);\n              });\n          }\n        })\n        .catch(function (error) {\n          alert(error.message);\n          console.log(error.message);\n          // Some error occurred, you can inspect the code: error.code\n          // Common errors could be invalid email and invalid or expired OTPs.\n        });\n    }\n    return <LoadingPage />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}